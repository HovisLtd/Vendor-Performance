@model PagedList.IPagedList<Hovis.Web.Base.Models.t_HovisVPD_Details>
@using PagedList.Mvc;

<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
@{
    ViewBag.Title = "Index";
}


<div class="content-wrap no-padding">
    <section class="panel panel-info">
        <header class="panel-heading">VPD Search</header>
        <div class="panel-body">
@using (Html.BeginForm("IndexSearch", "Details", FormMethod.Get, new { id = "IndexSearch" }))
{
    <div class="container">
        <div class="row">
            <div class="col-md-2">
                <p>Search:</p>
            </div>
            <div class="col-md-3">
                <div class="form-group">
                    <div class='input-group text' id='Searchfield'>
                        @Html.TextBox("Searchfield", ViewBag.CurrentFilter as string, new { @class = "form-control input-group" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-2">
                    <input type="submit" value="Search" class="btn btn-primary" />
                </div>
            </div>
        </div>
    </div>
}            <div class="table-responsive">
                <table class="table responsive" data-sortable="" data-sortable-initialized="true">
                    <thead>
                        <tr>
                            <th data-sorted="true" data-sorted-direction="descending">@Html.DisplayNameFor(model => model.First().VPDRefNo)</th>
                            <th data-sorted="false">@Html.DisplayNameFor(model => model.First().DateFirstRaised)</th>
                            <th data-sorted="false">@Html.DisplayNameFor(model => model.First().RaisedBy)</th>
                            <th data-sorted="false">@Html.DisplayNameFor(model => model.First().BakeryPONumber)</th>
                            <th data-sorted="false">@Html.DisplayNameFor(model => model.First().ItemCode)</th>
                            <th data-sorted="false">@Html.DisplayNameFor(model => model.First().ItemDescription)</th>
                            <th data-sorted="false">@Html.DisplayNameFor(model => model.First().Bakery)</th>
                            <th data-sorted="false">@Html.DisplayNameFor(model => model.First().SupplierName)</th>
                            <th data-sorted="false">Action</th>
                        </tr>
                    </thead>
                    @foreach (var item in Model)
            {
                        <tbody>
                            <tr class="@item.Status">
                                <td>@Html.DisplayFor(modelItem => item.VPDRefNo)</td>
                                <td>@Html.DisplayFor(modelItem => item.DateFirstRaised)</td>
                                <td>@Html.DisplayFor(modelItem => item.RaisedBy)</td>
                                <td>@Html.DisplayFor(modelItem => item.BakeryPONumber)</td>
                                <td>@Html.DisplayFor(modelItem => item.ItemCode)</td>
                                <td>@Html.DisplayFor(modelItem => item.ItemDescription)</td>
                                <td>@Html.DisplayFor(modelItem => item.v_HovisVPD_MasterData_Plants.BakeryDesc)</td>
                                <td>@Html.DisplayFor(modelItem => item.SupplierName)</td>
                                <td>
                                    @Html.ActionLink("Details", "StartArea", new { id = item.VPDRefNo }, new { @class = "btn btn-success btn-xs" }) |
                                    @Html.ActionLink("Docs", "Index", "Documents", new { id = item.VPDRefNo }, new { @class = "btn btn-info btn-xs" })
                                    @if (item.Status == "Open")
                                    {
                                        @String.Concat(" | ", "")@Html.ActionLink("Close", "Close", new { id = item.VPDRefNo }, new { @class = "btn btn-warning btn-xs" })
                                        @String.Concat(" | ", "")@Html.ActionLink("Edit", "Edit", new { id = item.VPDRefNo }, new { @class = "btn btn-success btn-xs" })
                                    }
                                    @Html.HiddenFor(modelItem => item.DescriptionOfIssue)
                                    @Html.HiddenFor(modelItem => item.SupplierContactDetails)
                                    @Html.HiddenFor(modelItem => item.SupplierContactName)
                                    @Html.HiddenFor(modelItem => item.ActionsRequired)
                                    @Html.HiddenFor(modelItem => item.OthersInvolved)
                                    @Html.HiddenFor(modelItem => item.LastUpdates)
                                    @Html.HiddenFor(modelItem => item.CloseOutComments)
                                    @Html.HiddenFor(modelItem => item.IssueClosureDate)
                                    @Html.HiddenFor(modelItem => item.Status)
                                    @Html.HiddenFor(modelItem => item.DeliveryLotNo)
                                    @Html.HiddenFor(modelItem => item.DeliveryDate)
                                    @Html.HiddenFor(modelItem => item.SupplierReferenceNo)
                                    @Html.HiddenFor(modelItem => item.t_HovisVPD_Category_Drop_Down.CatDescription)
                                    @Html.HiddenFor(modelItem => item.Bakery)
                                    @Html.HiddenFor(modelItem => item.t_HovisVPD_Priority_Drop_Down.PriorityDescription)
                                    @Html.HiddenFor(modelItem => item.t_HovisVPD_Supplier_Rating_Drop_Down.RatingDescription)
                                </td>

                            </tr>
                        </tbody>
            }
                </table>
                <br />
                Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

                @Html.PagedListPager(Model, page => Url.Action("IndexSearch", new { page, currentFilter = ViewBag.CurrentFilter }))
        </div>
    </div>
</section>
</div>
<style type="text/css">
    .Open {
        background-color:white;
    }
    .Closed {
        background-color:lavender;
    }
</style>

